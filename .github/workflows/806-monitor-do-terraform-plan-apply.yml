name: "monitor do terraform plan apply"

on:
  workflow_dispatch:
  pull_request:
  push:
    paths:
      - "806-monitor-do/**"
      - ".github/workflows/806-monitor-do-terraform-plan-apply*"
    branches:
      - rock-n-roll

env:
  GCP_PROJECT_ID: tuana9a
  GCP_PROJECT_ID_NUM: 474326114337
  GCP_SERVICE_ACCOUNT: terraform-state-editor@tuana9a.iam.gserviceaccount.com
  GCP_WORKLOAD_IDENTITY_POOL: github
  GCP_WORKLOAD_IDENTITY_POOL_PROVIDER: github-tuana9a
  WORKING_DIR: 806-monitor-do/
  PLAN_ARTIFACT_NAME: ${{ github.run_id }}-terraform-plan
  VAULT_TOKEN: "${{ secrets.MONITOR_DO_VAULT_TOKEN }}"

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - id: set-env
        name: set-env
        run: |
          workflow_name="${{ github.workflow }}"; echo $workflow_name
          echo "workflow_name=$workflow_name" >> $GITHUB_OUTPUT
          run_url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"; echo $run_url
          echo "run_url=$run_url" >> $GITHUB_OUTPUT
    outputs:
      workflow_name: ${{ steps.set-env.outputs.workflow_name }}
      run_url: ${{ steps.set-env.outputs.run_url }}
  plan:
    runs-on: ubuntu-22.04
    needs: [prepare]
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: "${{ env.GCP_PROJECT_ID }}"
          workload_identity_provider: "projects/${{ env.GCP_PROJECT_ID_NUM }}/locations/global/workloadIdentityPools/${{ env.GCP_WORKLOAD_IDENTITY_POOL }}/providers/${{ env.GCP_WORKLOAD_IDENTITY_POOL_PROVIDER }}"
          service_account: "${{ env.GCP_SERVICE_ACCOUNT }}"
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.1"
      - id: init
        name: init
        working-directory: "${{ env.WORKING_DIR }}"
        run: terraform init
      - id: plan
        name: plan
        working-directory: "${{ env.WORKING_DIR }}"
        run: terraform plan -out=tfplan.out
      - id: upload-plan
        name: upload-plan
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLAN_ARTIFACT_NAME }}
          path: "${{ env.WORKING_DIR }}/tfplan.out"
  apply:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    needs: [plan]
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: "${{ env.GCP_PROJECT_ID }}"
          workload_identity_provider: "projects/${{ env.GCP_PROJECT_ID_NUM }}/locations/global/workloadIdentityPools/${{ env.GCP_WORKLOAD_IDENTITY_POOL }}/providers/${{ env.GCP_WORKLOAD_IDENTITY_POOL_PROVIDER }}"
          service_account: "${{ env.GCP_SERVICE_ACCOUNT }}"
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.1"
      - id: init
        name: init
        working-directory: "${{ env.WORKING_DIR }}"
        run: terraform init
      - id: download-plan
        name: download-plan
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PLAN_ARTIFACT_NAME }}
          path: "${{ env.WORKING_DIR }}"
      - id: apply
        name: apply
        working-directory: "${{ env.WORKING_DIR }}"
        run: |
          terraform apply -auto-approve tfplan.out
          echo 'status=ok' >> $GITHUB_OUTPUT
    outputs:
      status: ${{ steps.apply.outputs.status }}
  notify:
    runs-on: ubuntu-latest
    needs: [prepare, apply]
    if: ${{ always() }}
    steps:
      - id: notify
        name: notify
        run: |
          workflow_name="${{ needs.prepare.outputs.workflow_name }}"
          run_url="${{ needs.prepare.outputs.run_url }}"
          url="${{ secrets.DISCORD_WEBHOOK }}"
          status=${{ needs.apply.outputs.status }}
          content="${status:-bad} $workflow_name $run_url"
          curl -X POST $url -H "Content-Type: application/json" -d "{\"content\":\"${content}\"}"
