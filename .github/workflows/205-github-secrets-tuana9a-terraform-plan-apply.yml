name: "205-github-secrets-tuana9a"

on:
  workflow_dispatch:
  push:
    paths:
      - "205-github-secrets-tuana9a/**"
      - ".github/workflows/205-github-secrets-tuana9a-terraform-plan-apply*"
    branches:
      - rock-n-roll

env:
  GCP_PROJECT_ID: tuana9a
  GCP_PROJECT_ID_NUM: 474326114337
  GCP_SERVICE_ACCOUNT: terraform-state-editor@tuana9a.iam.gserviceaccount.com
  GCP_WORKLOAD_IDENTITY_POOL: github
  GCP_WORKLOAD_IDENTITY_POOL_PROVIDER: github-tuana9a
  PLAN_ARTIFACT_NAME: ${{ github.run_id }}-terraform-plan
  WORKING_DIR: 205-github-secrets-tuana9a/

jobs:
  terraform-plan-apply:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - id: set-env
        name: set-env
        run: |
          workflow_name="${{ github.workflow }}"; echo $workflow_name
          echo "workflow_name=$workflow_name" >> $GITHUB_OUTPUT
          run_url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"; echo $run_url
          echo "run_url=$run_url" >> $GITHUB_OUTPUT
      - uses: google-github-actions/auth@v2
        with:
          project_id: "${{ env.GCP_PROJECT_ID }}"
          workload_identity_provider: "projects/${{ env.GCP_PROJECT_ID_NUM }}/locations/global/workloadIdentityPools/${{ env.GCP_WORKLOAD_IDENTITY_POOL }}/providers/${{ env.GCP_WORKLOAD_IDENTITY_POOL_PROVIDER }}"
          service_account: "${{ env.GCP_SERVICE_ACCOUNT }}"
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.1"
      - id: init
        name: init
        working-directory: "${{ env.WORKING_DIR }}"
        run: terraform init
      - id: tfvars
        name: add tfvars
        working-directory: "${{ env.WORKING_DIR }}"
        run: printf '${{ secrets.tfvars_205_github_secrets_tuana9a }}' > hidden.auto.tfvars
      - id: plan
        name: plan
        working-directory: "${{ env.WORKING_DIR }}"
        run: terraform plan -out=tfplan.out
      - id: upload-plan
        name: upload-plan
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLAN_ARTIFACT_NAME }}
          path: "${{ env.WORKING_DIR }}/tfplan.out"
      - id: apply
        name: apply
        working-directory: "${{ env.WORKING_DIR }}"
        run: terraform apply -auto-approve tfplan.out
      - id: status-ok
        name: status-ok
        run: echo 'status=1' >> $GITHUB_OUTPUT
    outputs:
      status: ${{ steps.status-ok.outputs.status }}
      workflow_name: ${{ steps.set-env.outputs.workflow_name }}
      run_url: ${{ steps.set-env.outputs.run_url }}
  notify:
    runs-on: ubuntu-latest
    needs: [terraform-plan-apply]
    if: ${{ always() }}
    steps:
      - id: notify
        name: notify
        run: |
          workflow_name="${{ needs.terraform-plan-apply.outputs.workflow_name }}"
          run_url="${{ needs.terraform-plan-apply.outputs.run_url }}"
          url="${{ secrets.DISCORD_WEBHOOK }}"
          status=${{ needs.terraform-plan-apply.outputs.status }}
          case "$status" in
            1) status_msg=":white_check_mark:" ;;
            *) status_msg=":x:" ;;
          esac
          content="$status_msg \`$workflow_name\` $run_url"
          curl -X POST $url -H "Content-Type: application/json" -d "{\"content\":\"${content}\"}"
