apiVersion: apps/v1
kind: Deployment
metadata:
  name: hcr
spec:
  template:
    metadata:
      labels:
        app: hcr
    spec:
      volumes:
        - name: hcr-workdir
          persistentVolumeClaim:
            claimName: hcr-workdir
      containers:
        - image: python:3.8-slim-bullseye
          name: hcr
          workingDir: /app/hust-captcha-resolver
          volumeMounts:
            - name: hcr-workdir
              mountPath: /app
          command: ["/bin/sh", "-c"]
          args: [".venv/bin/python main.py"]
          env:
            - name: DEVICE
              value: "cpu"
            - name: BIND
              value: "0.0.0.0"
            - name: PORT
              value: "8080"
          resources:
            requests:
              memory: "500Mi"
              cpu: "250m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              port: 8080
              path: "/"
          livenessProbe:
            tcpSocket:
              port: 8080
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hcr
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hcr
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: v1
kind: Service
metadata:
  name: hcr
spec:
  selector:
    app: hcr
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hcr
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - hcr.tuana9a.com
      secretName: hcr-tuana9a-com-tls
  rules:
    - host: hcr.tuana9a.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hcr
                port:
                  number: 8080
