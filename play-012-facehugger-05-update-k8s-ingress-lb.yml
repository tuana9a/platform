- hosts: tuana9a-dev2
  vars:
    kubeconfig: "~/.kube/config"
  tasks:
    - name: Get worker nodes
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        kind: Node
        label_selectors: "!node-role.kubernetes.io/control-plane"
      register: worker_nodes
    - name: Print worker nodes
      debug:
        var: worker_nodes
      when: i_need_more | default(false)
    - name: Set servers
      set_fact:
        # LOL: thanks you gemini
        upstream_servers: "{{ worker_nodes | json_query('resources[*].status.addresses') | json_query('[*].{hostname: [?type==`Hostname`].address | [0], ip: [?type==`InternalIP`].address | [0]}') }}"
    - name: Print servers
      debug:
        var: upstream_servers

    - name: Get ingress nginx svc
      vars:
        namespace: ingress-nginx
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        namespace: "{{ namespace }}"
        kind: Service
        name: ingress-nginx-controller
      register: ingress_nginx_controller_svc
    - name: Print svc
      debug:
        msg: "{{ ingress_nginx_controller_svc }}"
      when: i_need_more | default(false)
    - name: Get nodePorts
      set_fact:
        node_ports: "{{ ingress_nginx_controller_svc.resources[0].spec.ports }}"
    - name: Print nodePorts
      debug:
        msg: "{{ node_ports }}"
      when: i_need_more | default(false)
    - name: Set nodePort http, https
      set_fact:
        node_port_http: "{{ node_ports | json_query('[?appProtocol==`http`].nodePort') | first }}"
        node_port_https: "{{ node_ports | json_query('[?appProtocol==`https`].nodePort') | first }}"
    - name: Print nodePort http
      debug:
        msg: "{{ node_port_http }}"
    - name: Print nodePort https
      debug:
        msg: "{{ node_port_https }}"

- hosts: facehugger
  tasks:
    - name: Copy facts
      set_fact:
        upstream_servers: "{{ hostvars['192.168.56.209'].upstream_servers }}"
        node_port_http: "{{ hostvars['192.168.56.209'].node_port_http }}"
        node_port_https: "{{ hostvars['192.168.56.209'].node_port_https }}"
    - name: Print haproxy.cfg
      debug:
        msg: "{{ lookup('template', './templates/ingress-lb/haproxy.cfg') | split('\n') }}"
    - name: Confirm update
      pause:
        prompt: "Do you want to proceed with these servers? (yes/no)"
      register: confirm_update_result
    - name: Update haproxy cfg
      become: true
      template:
        src: "./templates/ingress-lb/haproxy.cfg"
        dest: "/etc/haproxy/haproxy.cfg"
      when: confirm_update_result.user_input == 'yes'
    - name: Reload haproxy service
      become: true
      ansible.builtin.service:
        name: haproxy
        state: reloaded
      when: confirm_update_result.user_input == 'yes'
